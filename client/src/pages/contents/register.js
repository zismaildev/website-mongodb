import * as React from "react";
import Avatar from "@mui/material/Avatar";
import Button from "@mui/material/Button";
import CssBaseline from "@mui/material/CssBaseline";
import TextField from "@mui/material/TextField";
import FormControlLabel from "@mui/material/FormControlLabel";
import Checkbox from "@mui/material/Checkbox";
import Link from "@mui/material/Link";
import Grid from "@mui/material/Grid";
import Box from "@mui/material/Box";
import LockOutlinedIcon from "@mui/icons-material/LockOutlined";
import Typography from "@mui/material/Typography";
import Container from "@mui/material/Container";
import { createTheme, ThemeProvider } from "@mui/material/styles";
import Swal from "sweetalert2";
import { Card } from "@mui/material";
import Head from "next/head";

const theme = createTheme();

export default function Register() {
  const handleSubmit = (event) => {
    event.preventDefault();
    const data = new FormData(event.currentTarget);

    const firstName = data.get("firstName");
    const lastName = data.get("lastName");
    const username = data.get("user");
    const email = data.get("email");
    const password = data.get("password");

    if (!firstName) {
      Swal.fire("Register Failed", "Please enter your first name", "warning");
      return;
    }

    if (!lastName) {
      Swal.fire("Register Failed", "Please enter your last name", "warning");
      return;
    }

    if (!username) {
      Swal.fire("Register Failed", "Please enter a username", "warning");
      return;
    }

    if (!email) {
      Swal.fire("Register Failed", "Please enter an email address", "warning");
      return;
    }

    if (!password) {
      Swal.fire("Register Failed", "Please enter a password", "warning");
      return;
    }

    fetch("http://localhost:7777/register", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        username: username,
        email: email,
        password: password,
        fullname: firstName,
        lastname: lastName,
      }),
    })
      .then((response) => response.json())
      .then((data) => {
        if (data.message === "Register Successfully") {
          Swal.fire({
            title: "Register Success",
            icon: "success",
            confirmButtonColor: "#3085d6",
            confirmButtonText: "Click To Login",
          }).then((result) => {
            if (result.isConfirmed) {
              window.location = "./login";
            }
          });
        } else if (data.message === "Username already exists") {
          Swal.fire("Register Failed", "Username already exists", "warning");
        } else if (data.message === "Email already exists") {
          Swal.fire("Register Failed", "Email already exists", "warning");
        } else {
          Swal.fire("Register Failed", "Unknown error occurred", "error");
        }
      })
      .catch((error) => {
        console.error("Error:", error);
      });
  };

  return (
    <>
      <Head>
        <title>Zismail-Dev</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container sx={{ mt: 15, pb: 10 }}>
        <CssBaseline />
        <Card className="Card-Register" p={5}>
          <Container component="main" maxWidth="sm" sx={{ pb: 5 }}>
            <Card
              sx={{
                mt: 5,
                p: 5,
                display: "flex",
                flexDirection: "column",
                alignItems: "center",
              }}
            >
              <Avatar sx={{ m: 1, bgcolor: "secondary.main" }}>
                <LockOutlinedIcon />
              </Avatar>
              <Typography component="h1" variant="h5">
                Register
              </Typography>

              <Box
                component="form"
                noValidate
                onSubmit={handleSubmit}
                sx={{ mt: 3 }}
              >
                <Grid container spacing={2} p={5}>
                  <Grid item xs={12} sm={6}>
                    <TextField
                      autoComplete="given-name"
                      name="firstName"
                      required
                      fullWidth
                      id="firstName"
                      label="First Name"
                      autoFocus
                    />
                  </Grid>
                  <Grid item xs={12} sm={6}>
                    <TextField
                      required
                      fullWidth
                      id="lastName"
                      label="Last Name"
                      name="lastName"
                      autoComplete="family-name"
                    />
                  </Grid>
                  <Grid item xs={12}>
                    <TextField
                      required
                      fullWidth
                      id="user"
                      label="Username"
                      name="user"
                      autoComplete="family-name"
                    />
                  </Grid>
                  <Grid item xs={12}>
                    <TextField
                      required
                      fullWidth
                      id="email"
                      label="Email Address"
                      name="email"
                      autoComplete="email"
                    />
                  </Grid>
                  <Grid item xs={12}>
                    <TextField
                      required
                      fullWidth
                      name="password"
                      label="Password"
                      type="password"
                      id="password"
                      autoComplete="new-password"
                    />
                  </Grid>
                  <Grid item xs={12}>
                    <FormControlLabel
                      control={
                        <Checkbox value="allowExtraEmails" color="primary" />
                      }
                      label="I want to receive inspiration, marketing promotions and updates via email."
                    />
                  </Grid>
                </Grid>
                <Button
                  type="submit"
                  fullWidth
                  variant="contained"
                  sx={{ mt: 3, mb: 2 }}
                >
                  Sign Up
                </Button>
                <Grid container justifyContent="flex-end">
                  <Grid item>
                    <Link href="login" variant="body2">
                      Already have an account? Sign in
                    </Link>
                  </Grid>
                </Grid>
              </Box>
            </Card>
          </Container>
        </Card>
      </Container>
    </>
  );
}
