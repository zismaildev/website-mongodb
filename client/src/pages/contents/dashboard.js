import { Card, Container, Grid, Typography } from "@mui/material";
import React, { useEffect, useState } from "react";
import Head from "next/head";
import Image from "next/image";
import Swal from "sweetalert2";

export default function Dashboard() {
  const [username, setUsername] = useState("");
  const [email, setEmail] = useState("");
  const [fullname, setFullname] = useState("");
  const [lastname, setLastname] = useState("");
  const [authStatus, setAuthStatus] = useState("");
  const [selectedImage, setSelectedImage] = useState(null);
  const [profileImage, setProfileImage] = useState(""); // เพิ่ม state profileImage

  useEffect(() => {
    const token = localStorage.getItem("token");

    if (!token) {
      setAuthStatus("failed");
      return;
    }

    const authData = JSON.parse(localStorage.getItem("authData"));

    if (authData?.status === "ok" && authData.username) {
      setUsername(authData.username);
      setEmail(authData.email);
      setFullname(authData.fullname);
      setLastname(authData.lastname);
      setProfileImage(authData.profileImage); // เพิ่มบรรทัดนี้
      setAuthStatus("success");
      return;
    }

    fetch("http://localhost:7777/authen", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${token}`,
      },
    })
      .then((response) => {
        if (!response.ok) {
          throw new Error(response.statusText);
        }
        return response.json();
      })
      .then((data) => {
        if (data?.status === "ok" && data.username) {
          setUsername(data.username);
          setEmail(data.email);
          setFullname(data.fullname);
          setLastname(data.lastname);
          setProfileImage(data.profileImage); // เพิ่มบรรทัดนี้
          setAuthStatus("success");
          localStorage.setItem("authData", JSON.stringify(data));
        } else {
          localStorage.removeItem("token");
          localStorage.removeItem("authData");
          setAuthStatus("failed");
        }
      })
      .catch((error) => {
        console.error("Error:", error);
      });
  }, []);

  const handleImageChange = (event) => {
    const file = event.target.files[0];
    setSelectedImage(file);
  };

  return (
    <>
      <Head>
        <title>Profile</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container sx={{ mt: 15, pb: 5 }}>
        <Card style={{ backgroundColor: "gray", color: "white" }}>
          <Container p={5} sx={{ mt: 5, pb: 5 }}>
            {authStatus === "success" ? (
              <Grid container spacing={2} sx={{ mt: 3, pb: 10 }}>
                <Grid item md={4}>
                  <Image
                    src={profileImage || "/assets/user-avatar.png"} // เปลี่ยนเงื่อนไขแสดงรูปภาพ
                    width={250}
                    height={250}
                    className="Profile-Das"
                    alt="profile"
                  />
                </Grid>
                <Grid item md={8} mt={8}>
                  <Typography component="h1" variant="h4">
                    Welcome back Admin {username}!
                  </Typography>

                  <Typography component="h1" variant="h5">
                    {email}
                  </Typography>
                  <Typography component="h1" variant="h5">
                    Name {fullname} {lastname}
                  </Typography>
                </Grid>
              </Grid>
            ) : (
              <Container p={5} sx={{ mt: 5, pb: 5 }} className="Sad-Das">
                <Image
                  src="/assets/sad.png"
                  width={250}
                  height={250}
                  alt="profile"
                />
                <Typography component="h1" variant="h4" textAlign="center">
                  Please login
                </Typography>
              </Container>
            )}
          </Container>
        </Card>
      </Container>
    </>
  );
}
